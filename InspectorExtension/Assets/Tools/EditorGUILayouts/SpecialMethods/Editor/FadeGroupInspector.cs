using System.Collections;using System.Collections.Generic;using UnityEngine;using UnityEditor;using UnityEditor.AnimatedValues;namespace InspectorExtension.FadeGroupInspector {	[CustomEditor (typeof (FadeGroup))]	public class FadeGroupInspector : Editor {		bool _show = false;		float _visible = 0;		float _speed = 0.05f;		public override void OnInspectorGUI () {			// use a toggle to determine shown or hidden			_show = EditorGUILayout.ToggleLeft ("Show", _show);			if (_show) {				// from hidden to shown, stop updating when _visible hits 1				if (_visible < 1.0f) {					_visible += _speed;					// repaint every time _visible is updated					Repaint ();					}			} else {				// from shown to hidden, stop updating when _visible hits 0				if (_visible > 0.0f) {					_visible -= _speed;					// repaint every time _visible is updated					Repaint ();				}			}			// fade group			if (EditorGUILayout.BeginFadeGroup (_visible)) {				EditorGUILayout.LabelField ("Label", "Content");			}			EditorGUILayout.EndFadeGroup ();		}	}}